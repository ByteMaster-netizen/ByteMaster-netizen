def fetch_stock_data(stock_symbol, start_date, end_date):
    stock_data = yf.download(stock_symbol, start=start_date, end=end_date)
    stock_data['PriceDiff'] = stock_data['Close'].diff()
    stock_data['UpDown'] = stock_data['PriceDiff'].apply(lambda x: 1 if x > 0 else 0)
    stock_data = stock_data.dropna()
    return stock_data

def train_predict_model(stock_data):
    X = stock_data[['Open', 'High', 'Low', 'Close', 'Volume']]
    y = stock_data['UpDown']
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    
    model = LogisticRegression()
    model.fit(X_train, y_train)
    
    predictions = model.predict(X_test)
    accuracy = accuracy_score(y_test, predictions)
    
    print("Accuracy:", accuracy)
    print(classification_report(y_test, predictions))

def main():
    stock_symbol = "AAPL"
    start_date = "2020-01-01"
    end_date = "2021-01-01"
    
    stock_data = fetch_stock_data(stock_symbol, start_date, end_date)
    train_predict_model(stock_data)

if __name__ == "__main__":
    main()
